\begin{document}
Sample inital text.

Another line before.

\begin{script}
---------------------------------------
---------------------------------------

-- below loads pdf emitting/tools library
local pdf = require 'justenoughlibtexpdf'

-- below enables SU.debug('silemath', 'some text') to print something, per sile.sil
SILE.debugFlags.silemath = 1

--pdf.add_content('q')
--local x, y = pdf:cursor()

local function renderGlyph(glyph, x, y, fontoptions)
	-- below 2 lines load raw font from cache (or disk if not cached); first
	-- occurrence results in 'Resolved font ...' message
	local fontoptions = SILE.font.loadDefaults(fontoptions)
	-- TODO: [LATER] use 'current outputter' (SILE.outputter.outputHbox) instead of explicit libtexpdf?
	SILE.outputters.libtexpdf.setFont(fontoptions)
	-- FIXME: below block feels overcomplicated and probably against the flow; can it be simplified?
	local shape = SILE.shaper:shapeToken(glyph, fontoptions)
	shape[1].width = 0
	shape[1].x_offset = x
	shape[1].y_offset = y
	-- FIXME: below 'dummy' triggers correct branch in libtexpdf-output's outputHbox
	SILE.outputters.libtexpdf.outputHbox{
		complex=true,
		glyphString='dummy',
		items=shape
	}
end

SILE.typesetter:pushHbox{
	height=30, width=30, depth=0,
	outputYourself = function(self, typesetter)
		renderGlyph('A', 20, 0, {family='DejaVu Serif', style='italic', size='15'})
		renderGlyph('B', 0, 5, {family='DejaVu Serif', style='', size='10.650000'})
		renderGlyph('âˆ‚', 30, -5, {family='DejaVu Serif', style='', size='36.221191'})
	end,
}

local i = 6
SILE.typesetter:typeset(i..' x '.. i ..' = '..i*i..'. ')
SILE.typesetter:leaveHmode()
SILE.call('smallskip')

---------------------------------------
---------------------------------------
\end{script}

Sample final text.

\end{document}
